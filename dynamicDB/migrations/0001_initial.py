# Generated by Django 5.1.5 on 2025-04-18 15:52

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PDFDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('pdf_file', models.FileField(max_length=500, upload_to='pdfs/')),
                ('converted_image', models.ImageField(max_length=500, upload_to='converted_images/')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='MainTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('similarity_score', models.FloatField(default=0.0)),
                ('keywords', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='dynamicDB.maintopic')),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_groups', to='dynamicDB.pdfdocument')),
            ],
            options={
                'verbose_name': 'Topic Group',
                'verbose_name_plural': 'Topic Groups',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ActiveTopicGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_at', models.DateTimeField(auto_now=True)),
                ('topic_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='active_selections', to='dynamicDB.maintopic')),
            ],
            options={
                'verbose_name': 'Active Topic Group',
                'verbose_name_plural': 'Active Topic Groups',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('start_page', models.IntegerField()),
                ('end_page', models.IntegerField()),
                ('confidence_score', models.FloatField(default=0.0)),
                ('order', models.IntegerField(default=0)),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='dynamicDB.pdfdocument')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ActivePDFSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('pdf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dynamicDB.pdfdocument')),
            ],
            options={
                'verbose_name': 'Active PDF Selection',
                'verbose_name_plural': 'Active PDF Selections',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('summary', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('chapters', models.ManyToManyField(related_name='main_topics', to='dynamicDB.chapter')),
                ('pdf_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_topics', to='dynamicDB.pdfdocument')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='SubTopic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('summary', models.TextField(blank=True)),
                ('relevance_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summary_topics', to='dynamicDB.maintopic')),
                ('main_topics', models.ManyToManyField(related_name='summary_topics', to='dynamicDB.topic')),
            ],
            options={
                'verbose_name': 'Summary Topic',
                'verbose_name_plural': 'Summary Topics',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='maintopic',
            name='topics',
            field=models.ManyToManyField(related_name='topic_groups', to='dynamicDB.topic'),
        ),
    ]
